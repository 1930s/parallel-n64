diff --git a/mupen64plus-video-angrylion/n64video.c b/mupen64plus-video-angrylion/n64video.c
index fb8f10b..2b70032 100644
--- a/mupen64plus-video-angrylion/n64video.c
+++ b/mupen64plus-video-angrylion/n64video.c
@@ -4835,27 +4835,42 @@ static void tclod_1cycle_next(int32_t* sss, int32_t* sst, int32_t s, int32_t t,
             }
             else
             {
-               if (!sigs->onelessthanmid)
-                {
-                    nextt = span[nextscan].stwz[1] + dtinc;
-                    nexts = span[nextscan].stwz[0] + dsinc;
-                    nextsw = span[nextscan].stwz[2] + dwinc;
-                    fart = (nextt + dtinc) >> 16;
-                    fars = (nexts + dsinc) >> 16;
-                    farsw = (nextsw + dwinc) >> 16;
-                    nextt >>= 16;
-                    nexts >>= 16;
-                    nextsw >>= 16;
-                }
-                else
-                {
-                    nextsw = (w + dwinc) >> 16;
-                    nexts = (s + dsinc) >> 16;
-                    nextt = (t + dtinc) >> 16;
-                    farsw = (w - dwinc) >> 16;
-                    fars = (s - dsinc) >> 16;
-                    fart = (t - dtinc) >> 16;
-                }
+               if (sigs->longspan)
+               {
+                  nextt  = (span[nextscan].stwz[1] + dtinc) >> 16;
+                  nexts  = (span[nextscan].stwz[0] + dsinc) >> 16;
+                  nextsw = (span[nextscan].stwz[2] + dwinc) >> 16;
+                  fart   = (span[nextscan].stwz[1] + (dtinc << 1)) >> 16;
+                  fars   = (span[nextscan].stwz[0] + (dsinc << 1)) >> 16;
+                  farsw  = (span[nextscan].stwz[2] + (dwinc << 1)) >> 16;
+               }
+               else if (sigs->midspan)
+               {
+                  nextt  = span[nextscan].stwz[1] >> 16;
+                  nexts  = span[nextscan].stwz[0] >> 16;
+                  nextsw = span[nextscan].stwz[2] >> 16;
+                  fart   = (span[nextscan].stwz[1] + dtinc) >> 16;
+                  fars   = (span[nextscan].stwz[0] + dsinc) >> 16;
+                  farsw  = (span[nextscan].stwz[2] + dwinc) >> 16;
+               }
+               else if (sigs->onelessthanmid)
+               {
+                  nextsw = (w + dwinc) >> 16;
+                  nexts = (s + dsinc) >> 16;
+                  nextt = (t + dtinc) >> 16;
+                  farsw = (w - dwinc) >> 16;
+                  fars = (s - dsinc) >> 16;
+                  fart = (t - dtinc) >> 16;
+               }
+               else
+               {
+                  nextt  = (t + dtinc) >> 16;
+                  nexts  = (s + dsinc) >> 16;
+                  nextsw = (w + dwinc) >> 16;
+                  fart   = (t + (dtinc << 1)) >> 16;
+                  fars   = (s + (dsinc << 1)) >> 16;
+                  farsw  = (w + (dwinc << 1)) >> 16;
+               }
             }
         }
         else
diff --git a/mupen64plus-video-angrylion/n64video.c b/mupen64plus-video-angrylion/n64video.c
index fb8f10b..6a2c9b8 100644
--- a/mupen64plus-video-angrylion/n64video.c
+++ b/mupen64plus-video-angrylion/n64video.c
@@ -4682,10 +4682,8 @@ static void tclod_1cycle_current(int32_t* sss, int32_t* sst, int32_t nexts, int3
 
         lodclamp = (fart & 0x60000) || (nextt & 0x60000) || (fars & 0x60000) || (nexts & 0x60000);
         
-        
-
-        
-        tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
+        if (!lodclamp)
+           tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
     
@@ -4767,7 +4765,8 @@ static void tclod_1cycle_current_simple(int32_t* sss, int32_t* sst, int32_t s, i
 
         lodclamp = (fart & 0x60000) || (nextt & 0x60000) || (fars & 0x60000) || (nexts & 0x60000);
 
-        tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
+        if (!lodclamp)
+           tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
     
@@ -4873,8 +4872,8 @@ static void tclod_1cycle_next(int32_t* sss, int32_t* sst, int32_t s, int32_t t,
 
         lodclamp = (fart & 0x60000) || (nextt & 0x60000) || (fars & 0x60000) || (nexts & 0x60000);
         
-        
-        tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
+        if (!lodclamp)
+           tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
 
         
         if ((lod & 0x4000) || lodclamp)
@@ -5539,11 +5538,12 @@ static void tclod_2cycle_current(int32_t* sss, int32_t* sst, int32_t nexts, int3
 
         lodclamp = (initt & 0x60000) || (nextt & 0x60000) || (inits & 0x60000) || (nexts & 0x60000) || (nextys & 0x60000) || (nextyt & 0x60000);
         
-        
 
-        
-        tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
-        tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        if (!lodclamp)
+        {
+           tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
+           tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        }
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
 
@@ -5603,8 +5603,11 @@ static void tclod_2cycle_current_simple(int32_t* sss, int32_t* sst, int32_t s, i
 
         lodclamp = (initt & 0x60000) || (nextt & 0x60000) || (inits & 0x60000) || (nexts & 0x60000) || (nextys & 0x60000) || (nextyt & 0x60000);
 
-        tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
-        tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        if (!lodclamp)
+        {
+           tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
+           tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        }
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
     
@@ -5663,8 +5666,11 @@ static void tclod_2cycle_current_notexel1(int32_t* sss, int32_t* sst, int32_t s,
 
         lodclamp = (initt & 0x60000) || (nextt & 0x60000) || (inits & 0x60000) || (nexts & 0x60000) || (nextys & 0x60000) || (nextyt & 0x60000);
 
-        tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
-        tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        if (!lodclamp)
+        {
+           tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
+           tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        }
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
     
@@ -5708,9 +5714,11 @@ static void tclod_2cycle_next(int32_t* sss, int32_t* sst, int32_t s, int32_t t,
     
         lodclamp = (initt & 0x60000) || (nextt & 0x60000) || (inits & 0x60000) || (nexts & 0x60000) || (nextys & 0x60000) || (nextyt & 0x60000);
 
-        tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
-        tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
-
+        if (!lodclamp)
+        {
+           tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
+           tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        }
         
         if ((lod & 0x4000) || lodclamp)
             lod = 0x7fff;
@@ -6701,7 +6709,8 @@ static void tclod_copy(int32_t* sss, int32_t* sst, int32_t s, int32_t t, int32_t
 
         lodclamp = (fart & 0x60000) || (nextt & 0x60000) || (fars & 0x60000) || (nexts & 0x60000);
 
-        tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
+        if (!lodclamp)
+           tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
 
         if ((lod & 0x4000) || lodclamp)
             lod = 0x7fff;
diff --git a/mupen64plus-video-angrylion/n64video.c b/mupen64plus-video-angrylion/n64video.c
index fb8f10b..919a95d 100644
--- a/mupen64plus-video-angrylion/n64video.c
+++ b/mupen64plus-video-angrylion/n64video.c
@@ -4521,35 +4521,71 @@ STRICTINLINE void lodfrac_lodtile_signals(int lodclamp, int32_t lod, uint32_t* l
     uint32_t ltil, dis, mag;
     int32_t lf;
 
-    
     if ((lod & 0x4000) || lodclamp)
-        lod = 0x7fff;
+    {
+       mag  = 0;
+       ltil = 7;
+       dis  = 1;
+       lf   = 0xff;
+    }
     else if (lod < min_level)
-        lod = min_level;
-                        
-    mag = (lod < 32) ? 1: 0;
-    ltil=  log2table[(lod >> 5) & 0xff];
-    dis = ((lod & 0x6000) || (ltil >= max_level)) ? 1 : 0;
-                        
-    lf = ((lod << 3) >> ltil) & 0xff;
+    {
+       mag  = 1;
+       ltil = 0;
+       dis  = max_level ? 0 : 1;
 
-    
-    if(!other_modes.sharpen_tex_en && !other_modes.detail_tex_en)
+       if(!other_modes.sharpen_tex_en && !other_modes.detail_tex_en)
+       {
+          if (dis)
+             lf = 0xff;
+          else
+             lf = 0;
+       }
+       else
+       {
+          lf = min_level << 3;
+          if (other_modes.sharpen_tex_en)
+             lf |= 0x100;
+       }
+    }
+    else if (lod < 32)
     {
-        if (dis)
-            lf = 0xff;
-        else if (mag)
-            lf = 0;
+       mag = 1;
+       ltil = 0;
+       dis = max_level ? 0 : 1;
+
+       if(!other_modes.sharpen_tex_en && !other_modes.detail_tex_en)
+       {
+          if (dis)
+             lf = 0xff;
+          else
+             lf = 0;
+       }
+       else
+       {
+          lf = lod << 3;
+          if (other_modes.sharpen_tex_en)
+             lf |= 0x100;
+       }
     }
+    else
+    {
+       mag  = 0;
+       ltil = log2table[(lod >> 5) & 0xff];
 
-    
-    
+       if(max_level)
+          dis = ((lod & 0x6000) || (ltil >= max_level)) ? 1 : 0;
+       else
+          dis = 1;
 
-    if(other_modes.sharpen_tex_en && mag)
-        lf |= 0x100;
+       if(!other_modes.sharpen_tex_en && !other_modes.detail_tex_en && dis)
+          lf = 0xff;
+       else
+          lf = ((lod << 3) >> ltil) & 0xff;
+    }
 
     *distant = dis;
-    *l_tile = ltil;
+    *l_tile  = ltil;
     *magnify = mag;
     lod_frac = lf;
 }
@@ -4682,10 +4718,8 @@ static void tclod_1cycle_current(int32_t* sss, int32_t* sst, int32_t nexts, int3
 
         lodclamp = (fart & 0x60000) || (nextt & 0x60000) || (fars & 0x60000) || (nexts & 0x60000);
         
-        
-
-        
-        tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
+        if (!lodclamp)
+           tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
     
@@ -4767,7 +4801,8 @@ static void tclod_1cycle_current_simple(int32_t* sss, int32_t* sst, int32_t s, i
 
         lodclamp = (fart & 0x60000) || (nextt & 0x60000) || (fars & 0x60000) || (nexts & 0x60000);
 
-        tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
+        if (!lodclamp)
+           tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
     
@@ -4835,27 +4870,42 @@ static void tclod_1cycle_next(int32_t* sss, int32_t* sst, int32_t s, int32_t t,
             }
             else
             {
-               if (!sigs->onelessthanmid)
-                {
-                    nextt = span[nextscan].stwz[1] + dtinc;
-                    nexts = span[nextscan].stwz[0] + dsinc;
-                    nextsw = span[nextscan].stwz[2] + dwinc;
-                    fart = (nextt + dtinc) >> 16;
-                    fars = (nexts + dsinc) >> 16;
-                    farsw = (nextsw + dwinc) >> 16;
-                    nextt >>= 16;
-                    nexts >>= 16;
-                    nextsw >>= 16;
-                }
-                else
-                {
-                    nextsw = (w + dwinc) >> 16;
-                    nexts = (s + dsinc) >> 16;
-                    nextt = (t + dtinc) >> 16;
-                    farsw = (w - dwinc) >> 16;
-                    fars = (s - dsinc) >> 16;
-                    fart = (t - dtinc) >> 16;
-                }
+               if (sigs->longspan)
+               {
+                  nextt  = (span[nextscan].stwz[1] + dtinc) >> 16;
+                  nexts  = (span[nextscan].stwz[0] + dsinc) >> 16;
+                  nextsw = (span[nextscan].stwz[2] + dwinc) >> 16;
+                  fart   = (span[nextscan].stwz[1] + (dtinc << 1)) >> 16;
+                  fars   = (span[nextscan].stwz[0] + (dsinc << 1)) >> 16;
+                  farsw  = (span[nextscan].stwz[2] + (dwinc << 1)) >> 16;
+               }
+               else if (sigs->midspan)
+               {
+                  nextt  = span[nextscan].stwz[1] >> 16;
+                  nexts  = span[nextscan].stwz[0] >> 16;
+                  nextsw = span[nextscan].stwz[2] >> 16;
+                  fart   = (span[nextscan].stwz[1] + dtinc) >> 16;
+                  fars   = (span[nextscan].stwz[0] + dsinc) >> 16;
+                  farsw  = (span[nextscan].stwz[2] + dwinc) >> 16;
+               }
+               else if (sigs->onelessthanmid)
+               {
+                  nextsw = (w + dwinc) >> 16;
+                  nexts = (s + dsinc) >> 16;
+                  nextt = (t + dtinc) >> 16;
+                  farsw = (w - dwinc) >> 16;
+                  fars = (s - dsinc) >> 16;
+                  fart = (t - dtinc) >> 16;
+               }
+               else
+               {
+                  nextt  = (t + dtinc) >> 16;
+                  nexts  = (s + dsinc) >> 16;
+                  nextsw = (w + dwinc) >> 16;
+                  fart   = (t + (dtinc << 1)) >> 16;
+                  fars   = (s + (dsinc << 1)) >> 16;
+                  farsw  = (w + (dwinc << 1)) >> 16;
+               }
             }
         }
         else
@@ -4873,8 +4923,8 @@ static void tclod_1cycle_next(int32_t* sss, int32_t* sst, int32_t s, int32_t t,
 
         lodclamp = (fart & 0x60000) || (nextt & 0x60000) || (fars & 0x60000) || (nexts & 0x60000);
         
-        
-        tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
+        if (!lodclamp)
+           tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
 
         
         if ((lod & 0x4000) || lodclamp)
@@ -5539,11 +5589,12 @@ static void tclod_2cycle_current(int32_t* sss, int32_t* sst, int32_t nexts, int3
 
         lodclamp = (initt & 0x60000) || (nextt & 0x60000) || (inits & 0x60000) || (nexts & 0x60000) || (nextys & 0x60000) || (nextyt & 0x60000);
         
-        
 
-        
-        tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
-        tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        if (!lodclamp)
+        {
+           tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
+           tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        }
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
 
@@ -5603,8 +5654,11 @@ static void tclod_2cycle_current_simple(int32_t* sss, int32_t* sst, int32_t s, i
 
         lodclamp = (initt & 0x60000) || (nextt & 0x60000) || (inits & 0x60000) || (nexts & 0x60000) || (nextys & 0x60000) || (nextyt & 0x60000);
 
-        tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
-        tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        if (!lodclamp)
+        {
+           tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
+           tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        }
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
     
@@ -5663,8 +5717,11 @@ static void tclod_2cycle_current_notexel1(int32_t* sss, int32_t* sst, int32_t s,
 
         lodclamp = (initt & 0x60000) || (nextt & 0x60000) || (inits & 0x60000) || (nexts & 0x60000) || (nextys & 0x60000) || (nextyt & 0x60000);
 
-        tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
-        tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        if (!lodclamp)
+        {
+           tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
+           tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        }
 
         lodfrac_lodtile_signals(lodclamp, lod, &l_tile, &magnify, &distant);
     
@@ -5708,9 +5765,11 @@ static void tclod_2cycle_next(int32_t* sss, int32_t* sst, int32_t s, int32_t t,
     
         lodclamp = (initt & 0x60000) || (nextt & 0x60000) || (inits & 0x60000) || (nexts & 0x60000) || (nextys & 0x60000) || (nextyt & 0x60000);
 
-        tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
-        tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
-
+        if (!lodclamp)
+        {
+           tclod_4x17_to_15(inits, nexts, initt, nextt, 0, &lod);
+           tclod_4x17_to_15(inits, nextys, initt, nextyt, lod, &lod);
+        }
         
         if ((lod & 0x4000) || lodclamp)
             lod = 0x7fff;
@@ -6701,7 +6760,8 @@ static void tclod_copy(int32_t* sss, int32_t* sst, int32_t s, int32_t t, int32_t
 
         lodclamp = (fart & 0x60000) || (nextt & 0x60000) || (fars & 0x60000) || (nexts & 0x60000);
 
-        tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
+        if (!lodclamp)
+           tclod_4x17_to_15(nexts, fars, nextt, fart, 0, &lod);
 
         if ((lod & 0x4000) || lodclamp)
             lod = 0x7fff;
