RSPDIR             = $(ROOT_DIR)/mupen64plus-rsp-hle
CXD4DIR            = $(ROOT_DIR)/mupen64plus-rsp-cxd4
CORE_DIR           = $(ROOT_DIR)/mupen64plus-core
LIBRETRO_COMM_DIR  = $(ROOT_DIR)/libretro-common
AUDIO_LIBRETRO_DIR = $(CORE_DIR)/src/plugin/audio_libretro
VIDEODIR_RICE      = $(ROOT_DIR)/gles2rice/src
VIDEODIR_GLN64     = $(ROOT_DIR)/gles2n64/src
VIDEODIR_ANGRYLION = $(ROOT_DIR)/mupen64plus-video-angrylion
VIDEODIR_GLIDE     = $(ROOT_DIR)/glide2gl/src
VIDEODIR_GLIDEN64  = $(ROOT_DIR)/mupen64plus-video-gliden64

DYNAREC_USED := 0

INCFLAGS += \
	-I$(CORE_DIR)/src \
	-I$(CORE_DIR)/src/api \
	-I$(AUDIO_LIBRETRO_DIR) \
	-I$(VIDEODIR_GLIDE)/Glitch64/inc \
	-I$(LIBRETRO_COMM_DIR)/include \
	-I$(LIBRETRO_DIR)

# libco
SOURCES_C += $(LIBRETRO_COMM_DIR)/libco/libco.c

SOURCES_C += $(RSPDIR)/src/alist.c \
    $(RSPDIR)/src/alist_audio.c \
    $(RSPDIR)/src/alist_naudio.c \
    $(RSPDIR)/src/alist_nead.c \
    $(RSPDIR)/src/audio.c \
    $(RSPDIR)/src/cicx105.c \
    $(RSPDIR)/src/hle.c \
    $(RSPDIR)/src/jpeg.c \
    $(RSPDIR)/src/hle_memory.c \
    $(RSPDIR)/src/mp3.c \
    $(RSPDIR)/src/musyx.c \
    $(RSPDIR)/src/hle_plugin.c

SOURCES_C += $(CXD4DIR)/rsp.c

# Core
SOURCES_C += \
	$(CORE_DIR)/src/api/callbacks.c \
	$(CORE_DIR)/src/api/common.c \
	$(CORE_DIR)/src/api/config.c \
	$(CORE_DIR)/src/api/frontend.c \
	$(CORE_DIR)/src/api/vidext_libretro.c \
	$(CORE_DIR)/src/main/cheat.c \
	$(CORE_DIR)/src/main/eventloop.c \
	$(CORE_DIR)/src/main/main.c \
	$(CORE_DIR)/src/main/profile.c \
	$(CORE_DIR)/src/main/md5.c \
	$(CORE_DIR)/src/main/rom.c \
	$(CORE_DIR)/src/main/savestates.c \
	$(CORE_DIR)/src/main/util.c \
	$(CORE_DIR)/src/memory/m64p_memory.c \
	$(CORE_DIR)/src/si/n64_cic_nus_6105.c \
	$(CORE_DIR)/src/si/pif.c \
	$(CORE_DIR)/src/si/af_rtc.c \
	$(CORE_DIR)/src/si/cic.c \
	$(CORE_DIR)/src/si/eeprom.c \
	$(CORE_DIR)/src/si/game_controller.c \
	$(CORE_DIR)/src/si/mempak.c \
	$(CORE_DIR)/src/si/rumblepak.c \
	$(CORE_DIR)/src/plugin/plugin.c \
	$(CORE_DIR)/src/plugin/get_time_using_C_localtime.c \
	$(CORE_DIR)/src/plugin/rumble_via_input_plugin.c \
	$(CORE_DIR)/src/r4300/mi_controller.c \
	$(CORE_DIR)/src/r4300/profile.c \
	$(CORE_DIR)/src/r4300/recomp.c \
	$(CORE_DIR)/src/r4300/exception.c \
	$(CORE_DIR)/src/r4300/cached_interp.c \
	$(CORE_DIR)/src/r4300/pure_interp.c \
	$(CORE_DIR)/src/r4300/reset.c \
	$(CORE_DIR)/src/dd/dd_controller.c \
	$(CORE_DIR)/src/dd/dd_rom.c \
	$(CORE_DIR)/src/dd/dd_disk.c \
	$(CORE_DIR)/src/ri/ri_controller.c \
	$(CORE_DIR)/src/ri/rdram.c \
	$(CORE_DIR)/src/ri/rdram_detection_hack.c \
	$(CORE_DIR)/src/si/si_controller.c \
	$(CORE_DIR)/src/vi/vi_controller.c \
	$(CORE_DIR)/src/rdp/rdp_core.c \
	$(CORE_DIR)/src/rdp/fb.c \
	$(CORE_DIR)/src/rdp_common/gdp.c \
	$(CORE_DIR)/src/rsp/rsp_core.c \
	$(CORE_DIR)/src/ai/ai_controller.c \
	$(CORE_DIR)/src/pi/pi_controller.c \
	$(CORE_DIR)/src/pi/sram.c \
	$(CORE_DIR)/src/pi/flashram.c \
	$(CORE_DIR)/src/pi/cart_rom.c \
	$(CORE_DIR)/src/r4300/interupt.c \
	$(CORE_DIR)/src/r4300/tlb.c \
	$(CORE_DIR)/src/r4300/cp0.c \
	$(CORE_DIR)/src/r4300/cp1.c \
	$(CORE_DIR)/src/r4300/r4300_core.c \
	$(CORE_DIR)/src/r4300/r4300.c

#	$(CORE_DIR)/src/api/debugger.c \
#	$(CORE_DIR)/src/main/ini_reader.c \

### DYNAREC ###
ifdef WITH_DYNAREC

	ifeq ($(WITH_DYNAREC), arm)
		DYNAFLAGS += -DNEW_DYNAREC=3
	endif

	ifeq ($(WITH_DYNAREC), x86)
		DYNAFLAGS += -D_M_IX86
	endif

	ifeq ($(WITH_DYNAREC), x86_64)
		DYNAFLAGS += -D_M_X64
	endif

ifeq ($(WITH_DYNAREC), arm)
		DYNAREC_USED = 1
		SOURCES_C += $(CORE_DIR)/src/r4300/new_dynarec/new_dynarec.c \
		$(CORE_DIR)/src/r4300/empty_dynarec.c \
		$(CORE_DIR)/src/r4300/instr_counters.c

		SOURCES_ASM += \
			$(CORE_DIR)/src/r4300/new_dynarec/linkage_$(WITH_DYNAREC).S
endif
ifeq ($(WITH_DYNAREC), $(filter $(WITH_DYNAREC), i386 i686 x86 x86_64 x64))
		DYNAREC_USED = 1
		CPUFLAGS += -msse -msse2 -DUSE_MMX_DECODES -DUSE_SSE_SUPPORT
		SOURCES_C += $(CORE_DIR)/src/r4300/hacktarux_dynarec/assemble.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gbc.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gtlb.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gcop0.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gcop1.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gcop1_d.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gcop1_l.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gcop1_s.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gcop1_w.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gr4300.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/grspecial.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/gregimm.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/regcache.c \
						 $(CORE_DIR)/src/r4300/hacktarux_dynarec/rjump.c
endif
ifeq ($(DYNAREC_USED), 0)
	SOURCES_C += $(CORE_DIR)/src/r4300/empty_dynarec.c
else
	DYNAFLAGS += -DDYNAREC
endif
endif

### VIDEO PLUGINS ###

# Rice

SOURCES_CXX += $(VIDEODIR_RICE)/Blender.cpp \
            $(VIDEODIR_RICE)/Combiner.cpp \
            $(VIDEODIR_RICE)/RiceConfig.cpp \
            $(VIDEODIR_RICE)/ConvertImage16.cpp \
            $(VIDEODIR_RICE)/ConvertImage.cpp \
            $(VIDEODIR_RICE)/RiceDebugger.cpp \
            $(VIDEODIR_RICE)/DecodedMux.cpp \
            $(VIDEODIR_RICE)/DeviceBuilder.cpp \
            $(VIDEODIR_RICE)/FrameBuffer.cpp \
            $(VIDEODIR_RICE)/GraphicsContext.cpp \
            $(VIDEODIR_RICE)/OGLCombiner.cpp \
            $(VIDEODIR_RICE)/OGLDecodedMux.cpp \
            $(VIDEODIR_RICE)/OGLES2FragmentShaders.cpp \
            $(VIDEODIR_RICE)/OGLExtCombiner.cpp \
            $(VIDEODIR_RICE)/OGLExtRender.cpp \
            $(VIDEODIR_RICE)/OGLGraphicsContext.cpp \
            $(VIDEODIR_RICE)/OGLRender.cpp \
            $(VIDEODIR_RICE)/OGLRenderExt.cpp \
            $(VIDEODIR_RICE)/OGLTexture.cpp \
            $(VIDEODIR_RICE)/RenderBase.cpp \
            $(VIDEODIR_RICE)/Render.cpp \
            $(VIDEODIR_RICE)/RenderExt.cpp \
            $(VIDEODIR_RICE)/RenderTexture.cpp \
            $(VIDEODIR_RICE)/RSP_Parser.cpp \
            $(VIDEODIR_RICE)/RSP_S2DEX.cpp \
            $(VIDEODIR_RICE)/Texture.cpp \
            $(VIDEODIR_RICE)/TextureManager.cpp \
            $(VIDEODIR_RICE)/VectorMath.cpp \
            $(VIDEODIR_RICE)/Video.cpp

ifeq ($(HAVE_NEON), 1)
	SOURCES_ASM += $(VIDEODIR_RICE)/RenderBase_neon.S
endif

# Libretro

SOURCES_C += $(LIBRETRO_DIR)/libretro.c \
				 $(LIBRETRO_COMM_DIR)/glsm/glsm.c \
				 $(CORE_DIR)/src/plugin/emulate_game_controller_via_libretro.c \
				 $(AUDIO_LIBRETRO_DIR)/audio_backend_libretro.c \
				 $(AUDIO_LIBRETRO_DIR)/audio_resampler_driver.c \
				 $(AUDIO_LIBRETRO_DIR)/drivers_resampler/sinc.c \
				 $(AUDIO_LIBRETRO_DIR)/drivers_resampler/nearest.c \
				 $(AUDIO_LIBRETRO_DIR)/drivers_resampler/cc_resampler.c \
				 $(AUDIO_LIBRETRO_DIR)/audio_utils.c

ifeq ($(WITH_CRC),brumme)
   SOURCES_C += $(LIBRETRO_DIR)/brumme_crc.c
else
   SOURCES_C += $(LIBRETRO_DIR)/libretro_crc.c
endif

ifeq ($(GLIDEN64), 1)
#SOURCES_CXX +=  $(VIDEODIR_GLIDEN64)/src/3DMath.cpp \
					  $(VIDEODIR_GLIDEN64)/src/Combiner.cpp
SOURCES_CXX   += $(VIDEODIR_GLIDEN64)/src/CRC.cpp
#SOURCES_CXX  += $(VIDEODIR_GLIDEN64)/src/DepthBuffer.cpp
SOURCES_CXX   += $(VIDEODIR_GLIDEN64)/src/F3D.cpp \
					  $(VIDEODIR_GLIDEN64)/src/F3DDKR.cpp \
					  $(VIDEODIR_GLIDEN64)/src/F3DEX.cpp \
					  $(VIDEODIR_GLIDEN64)/src/F3DPD.cpp \
					  $(VIDEODIR_GLIDEN64)/src/F3DSWSE.cpp \
					  $(VIDEODIR_GLIDEN64)/src/F3DWRUS.cpp
#SOURCES_CXX  += $(VIDEODIR_GLIDEN64)/src/FrameBuffer.cpp
#SOURCES_CXX  += $(VIDEODIR_GLIDEN64)/src/F3DEX2.cpp
#SOURCES_CXX  += $(VIDEODIR_GLIDEN64)/src/F3DEX2CBFD.cpp
#SOURCES_CXX  += $(VIDEODIR_GLIDEN64)/src/ZSort.cpp
#SOURCES_CXX   += $(VIDEODIR_GLIDEN64)/src/VI.cpp
else
SOURCES_C += $(VIDEODIR_GLN64)/3DMath.c \
            $(VIDEODIR_GLN64)/glN64Config.c \
            $(VIDEODIR_GLN64)/FrameBuffer.c \
            $(VIDEODIR_GLN64)/Hash.c \
            $(VIDEODIR_GLN64)/DepthBuffer.c \
            $(VIDEODIR_GLN64)/F3DEX2CBFD.c \
            $(VIDEODIR_GLN64)/F3D.c \
            $(VIDEODIR_GLN64)/F3DDKR.c \
            $(VIDEODIR_GLN64)/F3DEX2.c \
            $(VIDEODIR_GLN64)/F3DEX.c \
            $(VIDEODIR_GLN64)/F3DPD.c \
            $(VIDEODIR_GLN64)/F3DSWSE.c \
            $(VIDEODIR_GLN64)/F3DWRUS.c \
            $(VIDEODIR_GLN64)/GBI.c \
            $(VIDEODIR_GLN64)/gDP.c \
            $(VIDEODIR_GLN64)/gles2N64.c \
            $(VIDEODIR_GLN64)/gSP.c \
            $(VIDEODIR_GLN64)/L3D.c \
            $(VIDEODIR_GLN64)/L3DEX2.c \
            $(VIDEODIR_GLN64)/L3DEX.c \
            $(VIDEODIR_GLN64)/N64.c \
            $(VIDEODIR_GLN64)/OpenGL.c \
            $(VIDEODIR_GLN64)/RDP.c \
            $(VIDEODIR_GLN64)/gles2n64_rsp.c \
            $(VIDEODIR_GLN64)/S2DEX2.c \
            $(VIDEODIR_GLN64)/S2DEX.c \
            $(VIDEODIR_GLN64)/ShaderCombiner.c \
            $(VIDEODIR_GLN64)/Textures.c \
            $(VIDEODIR_GLN64)/Turbo3D.c \
            $(VIDEODIR_GLN64)/ZSort.c \
            $(VIDEODIR_GLN64)/VI.c

ifeq ($(HAVE_NEON), 1)
	SOURCES_C   += $(VIDEODIR_GLN64)/3DMathNeon.c
endif
endif

ifeq ($(HAVE_NEON), 1)
	SOURCES_ASM	+= $(AUDIO_LIBRETRO_DIR)/audio_utils_neon.S \
						$(AUDIO_LIBRETRO_DIR)/drivers_resampler/sinc_neon.S \
						$(AUDIO_LIBRETRO_DIR)/drivers_resampler/cc_resampler_neon.S
endif

#Glide 64
SOURCES_C += $(VIDEODIR_GLIDE)/Glide64/glide64_3dmath.c \
            $(VIDEODIR_GLIDE)/Glide64/FBtoScreen.c \
            $(VIDEODIR_GLIDE)/Glide64/Glide64_Ini.c \
            $(VIDEODIR_GLIDE)/Glide64/glidemain.c \
            $(VIDEODIR_GLIDE)/Glide64/glide64_util.c \
				$(VIDEODIR_GLIDE)/Glide64/Glide64_UCode.c \
            $(VIDEODIR_GLIDE)/Glide64/glide64_rdp.c \
            $(VIDEODIR_GLIDE)/Glide64/Combine.c \
            $(VIDEODIR_GLIDE)/Glide64/DepthBufferRender.c \
            $(VIDEODIR_GLIDE)/Glide64/TexCache.c \
				$(VIDEODIR_GLIDE)/Glide64/MiClWr.c \
            $(VIDEODIR_GLIDE)/Glide64/TexLoad.c

# Glitch64
SOURCES_C   += $(VIDEODIR_GLIDE)/Glitch64/glitch64_combiner.c \
            $(VIDEODIR_GLIDE)/Glitch64/geometry.c \
            $(VIDEODIR_GLIDE)/Glitch64/glitchmain.c \
            $(VIDEODIR_GLIDE)/Glitch64/glitch64_textures.c

### Angrylion's renderer ###
SOURCES_C +=  $(VIDEODIR_ANGRYLION)/n64video_main.c \
						  $(VIDEODIR_ANGRYLION)/n64video_vi.c \
						  $(VIDEODIR_ANGRYLION)/n64video_rdp.c \
						  $(VIDEODIR_ANGRYLION)/n64video.c

ifeq ($(GLES), 1)
	GLFLAGS += -DGLES -DHAVE_OPENGLES2 -DDISABLE_3POINT -DUSE_GLES
	SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/glsym_es2.c
else
	#Texture sampling enhancements.
	GLFLAGS += -DENABLE_3POINT -DENABLE_TEXTURE_SAMPLING

	GLFLAGS += -DHAVE_OPENGL
	SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/glsym_gl.c
endif

SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/rglgen.c
